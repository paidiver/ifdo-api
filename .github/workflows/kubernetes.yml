name: Deploy Kubernetes Resources

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  SECRETS_NAME: paidiver-secret

jobs:
  create_namespace:
    name: Create Namespace
    runs-on: ubuntu-latest
    container:
      image: bitnami/kubectl:latest
    steps:
      - name: Setup Kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
          chmod 600 kubeconfig
          echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
          echo "HELM_KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
      - name: Create namespace if not exists
        run: |
          kubectl get namespace "${{ secrets.KUBE_NAMESPACE }}" || kubectl create namespace "${{ secrets.KUBE_NAMESPACE }}"

  create_secrets:
    name: Create Secrets
    runs-on: ubuntu-latest
    container:
      image: bitnami/kubectl:latest
    needs: create_namespace
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
          chmod 600 kubeconfig
          echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
          echo "HELM_KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
      - name: Generate .env
        run: ./make_env.sh
      - name: Create Kubernetes secrets
        run: |
          ENV_SUFFIX=""
          kubectl create secret generic "$SECRETS_NAME" \
            --namespace=${{ secrets.KUBE_NAMESPACE }} \
            --dry-run=client -o yaml \
            | kubectl apply -n ${{ secrets.KUBE_NAMESPACE }} -f -


  ssl_certificates:
    name: Apply SSL Certificates
    runs-on: ubuntu-latest
    container:
      image: bitnami/kubectl:latest
    needs: create_secrets
    steps:
      - name: Setup Kubeconfig
        run: |
          echo "$KUBE_CONFIG" | base64 -d > kubeconfig
          chmod 600 kubeconfig
          echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
          echo "HELM_KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
      - name: Apply Cluster Issuer
        run: |
          kubectl apply -f ./deployment/cluster-issuer.yaml
