"""Add handle to image

Revision ID: 71cfa914a0e5
Revises: 8a9805d936ed
Create Date: 2025-08-12 15:22:16.639679

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '71cfa914a0e5'
down_revision: Union[str, Sequence[str], None] = '8a9805d936ed'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'annotation_labels', ['id'])
    op.create_unique_constraint(None, 'annotations', ['id'])
    op.create_unique_constraint(None, 'annotators', ['id'])
    op.create_unique_constraint(None, 'datasets', ['id'])
    op.create_unique_constraint(None, 'image_camera_calibration_models', ['id'])
    op.create_unique_constraint(None, 'image_camera_housing_viewports', ['id'])
    op.create_unique_constraint(None, 'image_camera_poses', ['id'])
    op.create_unique_constraint(None, 'image_contexts', ['id'])
    op.create_unique_constraint(None, 'image_creators', ['id'])
    op.create_unique_constraint(None, 'image_domeport_parameters', ['id'])
    op.create_unique_constraint(None, 'image_events', ['id'])
    op.create_unique_constraint(None, 'image_flatport_parameters', ['id'])
    op.create_unique_constraint(None, 'image_licenses', ['id'])
    op.create_unique_constraint(None, 'image_photometric_calibrations', ['id'])
    op.create_unique_constraint(None, 'image_pis', ['id'])
    op.create_unique_constraint(None, 'image_platforms', ['id'])
    op.create_unique_constraint(None, 'image_projects', ['id'])
    op.create_unique_constraint(None, 'image_sensors', ['id'])
    op.create_unique_constraint(None, 'image_set_related_materials', ['id'])
    op.add_column('images', sa.Column('handle', sa.String(), nullable=True))
    op.create_unique_constraint(None, 'images', ['id'])
    op.create_unique_constraint(None, 'labels', ['id'])
    op.create_unique_constraint(None, 'provenance_activities', ['id'])
    op.create_unique_constraint(None, 'provenance_agents', ['id'])
    op.create_unique_constraint(None, 'provenance_entities', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'provenance_entities', type_='unique')
    op.drop_constraint(None, 'provenance_agents', type_='unique')
    op.drop_constraint(None, 'provenance_activities', type_='unique')
    op.drop_constraint(None, 'labels', type_='unique')
    op.drop_constraint(None, 'images', type_='unique')
    op.drop_column('images', 'handle')
    op.drop_constraint(None, 'image_set_related_materials', type_='unique')
    op.drop_constraint(None, 'image_sensors', type_='unique')
    op.drop_constraint(None, 'image_projects', type_='unique')
    op.drop_constraint(None, 'image_platforms', type_='unique')
    op.drop_constraint(None, 'image_pis', type_='unique')
    op.drop_constraint(None, 'image_photometric_calibrations', type_='unique')
    op.drop_constraint(None, 'image_licenses', type_='unique')
    op.drop_constraint(None, 'image_flatport_parameters', type_='unique')
    op.drop_constraint(None, 'image_events', type_='unique')
    op.drop_constraint(None, 'image_domeport_parameters', type_='unique')
    op.drop_constraint(None, 'image_creators', type_='unique')
    op.drop_constraint(None, 'image_contexts', type_='unique')
    op.drop_constraint(None, 'image_camera_poses', type_='unique')
    op.drop_constraint(None, 'image_camera_housing_viewports', type_='unique')
    op.drop_constraint(None, 'image_camera_calibration_models', type_='unique')
    op.drop_constraint(None, 'datasets', type_='unique')
    op.drop_constraint(None, 'annotators', type_='unique')
    op.drop_constraint(None, 'annotations', type_='unique')
    op.drop_constraint(None, 'annotation_labels', type_='unique')
    # ### end Alembic commands ###
