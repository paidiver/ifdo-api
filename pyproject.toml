# see documentation, e.g.
# - https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#declaring-project-metadata
# - https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# - https://www.python.org/dev/peps/pep-0621/

[build-system]
requires = ["setuptools>=64.0.0", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
authors = [
    { name = "Tobias Ferreira", email = "tobias.ferreira@noc.ac.uk" }
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
  "fastapi (>=0.116.0,<0.117.0)",
  "uvicorn (>=0.35.0,<0.36.0)",
  "sqlalchemy[asyncio] (>=2.0.41,<3.0.0)",
  "alembic (>=1.16.3,<2.0.0)",
  "psycopg2-binary (>=2.9.10,<3.0.0)",
  "geoalchemy2 (>=0.17.1,<0.18.0)",
  "asyncpg (>=0.30.0,<0.31.0)",
  "sqlmodel (>=0.0.24,<0.0.25)",
  "python-dotenv (>=1.1.1,<2.0.0)",
  "geojson-pydantic (>=2.0.0,<3.0.0)",
  "redis (>=6.2.0,<7.0.0)",
  "fastapi-cache2 (>=0.2.2,<0.3.0)",
  "shapely (==2.0.7)",
  "tqdm (>=4.67.1,<5.0.0)",
  "python-multipart (>=0.0.20,<0.0.21)",
  "tipg (>=1.1.2,<2.0.0)",
  "jsonschema (>=4.25.0,<5.0.0)",
  "pyyaml (>=6.0.2,<7.0.0)",
  ]
description = "A REST API for handling image metadata"
keywords = ["image","ifdo","metadata"]
license = {file = "LICENSE"}
name = "ifdo-api"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.10,<4.0"
version = "0.1.0"

[project.optional-dependencies]
dev = [
    "build",  # build is not only used in publishing (below), but also in the template's test suite
    "bump-my-version",
    "ruff",
    "tox",
    "myst_parser",
]
publishing = [
    "build",
    "twine",
    "wheel",
]

[project.urls]
Repository = "https://github.com/paidiver/ifdo-api"
Issues = "https://github.com/paidiver/ifdo-api/issues"


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py310,py311,py312
skip_missing_interpreters = true

"""

[tool.ruff]
line-length = 150
output-format = "concise"
extend-exclude = [
  "docs",
  "alembic/*",
]

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Enable Pyflakes `E` and `F` codes by default.
select = ["ALL"]
ignore = [
    "ANN204", # Missing return type annotation for special (dunder) method
    "FBT",    # Using boolean function arguments
    "TD",     # TODOs
    "FIX001", # Resolve FIXMEs
    "FIX002", # Resolve TODOs
    "B028",   # No explicit `stacklevel` keyword argument found in warning
    # No docstrings required in the following cases
    "D100", # Missing module docstring
    "D104", # Missing public package docstring
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in `__init__`
    "ERA001",  # Commented code
    "COM812",
    "EXE002", # Executable files should not be checked
    "PLR0913"
]
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
# Tests can ignore a few extra rules
"tests/**.py" = [
    "ANN201", # Missing return type annotation for public function
    "PT011",  # Missing `match` parameter in `pytest.raises()`
    "S101",   # Use of assert is detected
]

[tool.ruff.lint.isort]
known-first-party = ["ifdo-api"]
force-single-line = true
no-lines-before = ["future","standard-library","third-party","first-party","local-folder"]

[tool.bumpversion]
current_version = "0.1.0"

[[tool.bumpversion.files]]
filename = "src/ifdo_api/__init__.py"

[[tool.bumpversion.files]]
filename = "pyproject.toml"

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.2"
jupyterlab = "^4.4.5"
mapbox-vector-tile = "^2.2.0"
